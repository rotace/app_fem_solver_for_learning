# 要素形状関数の微分を計算座標(xi,et,zt)で評価
function [B,detJ] = Bmatrix3D(xi,et,zt,C,nen)
# INPUT
#  (xi,et) : -1~+1 ガウスルジャンドル積分の計算座標
#  C  : 要素節点の座標行列 [ x1 x2 ... xn ;
#                           y1 y2 ... yn ;
#                           z1 z2 ... zn ] 
#      nen : 形状関数の数 (1次要素=8 or 2次要素=20)
# OUTPUT
#  B  : 形状関数微分行列 [ dN1/dx dN2/dx ... dNn/dx ;
#                         dN1/dy dN2/dy ... dNn/dy ;
#                         dN1/dz dN2/dz ... dNn/dz ];

if nen == 8      # 1次要素(形状関数が1次)

  # 勾配行列の計算 GN = [ dN1/dxi dN2/dxi dN3/dxi dN4/dxi ...;
  #                      dN1/det dN2/det dN3/det dN4/det ...;
  #                      dN1/dzt dN2/dzt dN3/dzt dN4/dzt ...;
  GN = 0.125 * [+(1.0-et)*(1.0-zt), ...
                +(1.0+et)*(1.0-zt), ...
                -(1.0+et)*(1.0-zt), ... 
                -(1.0-et)*(1.0-zt), ... 
                +(1.0-et)*(1.0+zt), ... 
                +(1.0+et)*(1.0+zt), ... 
                -(1.0+et)*(1.0+zt), ... 
                -(1.0-et)*(1.0+zt)  ;
                -(1.0+xi)*(1.0-zt), ... 
                +(1.0+xi)*(1.0-zt), ... 
		+(1.0-xi)*(1.0-zt), ... 
		-(1.0-xi)*(1.0-zt), ... 
                -(1.0+xi)*(1.0+zt), ... 
		+(1.0+xi)*(1.0+zt), ... 
		+(1.0-xi)*(1.0+zt), ... 
		-(1.0-xi)*(1.0+zt)  ;
                -(1.0+xi)*(1.0-et), ... 
		-(1.0+xi)*(1.0+et), ... 
		-(1.0-xi)*(1.0+et), ... 
		-(1.0-xi)*(1.0-et), ... 
		+(1.0+xi)*(1.0-et), ... 
		+(1.0+xi)*(1.0+et), ... 
		+(1.0-xi)*(1.0+et), ... 
		+(1.0-xi)*(1.0-et) ];
  # ヤコビ行列  dx/dxi = dN1/dxi*x1 + dN2/dxi*x2 ...
  #            dy/dxi = dN1/dxi*y1 + dN2/dxi*y2 ...
  #            dz/dxi = dN1/dxi*z1 + dN2/dxi*z2 ...
  #            dx/det = dN1/det*x1 + dN2/det*x2 ...
  #            dy/det = dN1/det*y1 + dN2/det*y2 ...
  #            dz/det = dN1/det*z1 + dN2/det*z2 ...
  #            dx/dzt = dN1/dzt*x1 + dN2/dzt*x2 ...
  #	       dy/dzt = dN1/dzt*y1 + dN2/dzt*y2 ...
  #	       dz/dzt = dN1/dzt*z1 + dN2/dzt*z2 ...
  J  = GN*C';
  # 行列値
  detJ = det(J);
  # 形状関数微分行列  [J][B]=[GN]
  B    = J\GN;

elseif nen == 20  # 2次要素(形状関数が2次)
  error('not implimented')
end

	 
